//
//  PokemonDetailInteractor.swift
//  SimpleVIP
//
//  Created by Batm Admin on 22/02/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PokemonDetailBusinessLogic
{
    func fetchPokemonDetail(request: PokemonDetail.FetchDetail.Request)
    func changePokemonName(reques: PokemonDetail.UpdateName.Request)
}

protocol PokemonDetailDataStore
{
  var pokemon: Pokemon! { get set }
}

class PokemonDetailInteractor: PokemonDetailBusinessLogic, PokemonDetailDataStore
{
  var presenter: PokemonDetailPresentationLogic?
  var worker: PokemonsWorker? = PokemonsWorker(pokemonsStore: PokemonsAPIStore())
  var pokemon: Pokemon!
    var pokeDetailResponse : PokemonDetail.FetchDetail.Response?
  
  // MARK: fetchPokemonDetail
    func fetchPokemonDetail(request: PokemonDetail.FetchDetail.Request) {
        // do some work and send response to presenter
        worker?.fetchPokemonDetail(pokemon: pokemon){ pokeDetail in
            guard let pokeDetail = pokeDetail else {
                return
            }
            
            let response = PokemonDetail.FetchDetail.Response(data: pokeDetail)
            self.pokeDetailResponse = response
            self.presenter?.presentPokemonDetail(response: response)
        }
    }
    
    func changePokemonName(reques: PokemonDetail.UpdateName.Request) {
        self.pokemon.name = reques.name
        var res = self.pokeDetailResponse!
        
        res.data.name = reques.name
        self.presenter?.presentPokemonUpdateName(response: res)
    }
}
